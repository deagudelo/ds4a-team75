panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y= element_text(size=9),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5, size=9, face="bold"))+
ggtitle(stringr::str_wrap("Porcentaje de estudiantes según tipo de respuesta",45))
b
#my_layout <- rbind(c(1, 1,1,2,2), c(1, 1,1,2,2))
#my_layout
c<-grid.arrange(b,a , ncol = 2 , bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
c
#legend.text = element_text(size=8),
#Nombre en caso de que se quiera para las tablas
#c<-grid.arrange(b,a , ncol = 2, top=textGrob("Tittle", gp=gpar(fontsize=9)), bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
ggsave(filename = paste(l,"_factores_asociados_PISA_2019.pdf"), plot = c, width = 22, height = 12,
units = "cm", dpi = 320)
}
library(write.xlsx)
a<-ggplot(tbl[dimension==l & diferencia==1], aes(x = stringr::str_wrap(traduccion, 25), y = mnpvdiff, fill=stringr::str_wrap(group, 80)))+
geom_bar(stat = "identity", position = "dodge",width=0.7)+
coord_flip()+
geom_text(aes(label = round(mnpvdiff,2)), color = "black", position = position_dodge(0.9), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.y=element_blank(),
legend.text = element_text(size=8),
axis.ticks.y=element_blank(),
plot.title = element_text(hjust = 0.5,size=9, face="bold"))+
scale_fill_brewer(palette="Paired")+
ggtitle(stringr::str_wrap(paste("Diferencia en el logro entre los estudiantes por variables de ",l),45))
a
b<-ggplot(tblprop[dimension==l], aes(x = stringr::str_wrap(traduccion, 30), y = value, fill=stringr::str_wrap(refgroup, 40)))+
geom_bar(stat = "identity", width=0.7)+
coord_flip()+
geom_text(aes(label = scales::percent(round(value/100,2))), color = "black", position = position_stack(vjust = 0.5), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y= element_text(size=9),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5, size=9, face="bold"))+
ggtitle(stringr::str_wrap("Porcentaje de estudiantes según tipo de respuesta",45))
b
c<-grid.arrange(b,a , ncol = 2 , bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
c
for(l in variables$dimension){
a<-ggplot(tbl[dimension==l & diferencia==1], aes(x = stringr::str_wrap(traduccion, 25), y = mnpvdiff, fill=stringr::str_wrap(group, 80)))+
geom_bar(stat = "identity", position = "dodge",width=0.7)+
coord_flip()+
geom_text(aes(label = round(mnpvdiff,2)), color = "black", position = position_dodge(0.9), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.y=element_blank(),
legend.text = element_text(size=8),
axis.ticks.y=element_blank(),
plot.title = element_text(hjust = 0.5,size=9, face="bold"))+
scale_fill_brewer(palette="Paired")+
ggtitle(stringr::str_wrap(paste("Diferencia en el logro entre los estudiantes por variables de ",l),45))
a
b<-ggplot(tblprop[dimension==l], aes(x = stringr::str_wrap(traduccion, 30), y = value, fill=stringr::str_wrap(refgroup, 40)))+
geom_bar(stat = "identity", width=0.7)+
coord_flip()+
geom_text(aes(label = scales::percent(round(value/100,2))), color = "black", position = position_stack(vjust = 0.5), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y= element_text(size=9),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5, size=9, face="bold"))+
ggtitle(stringr::str_wrap("Porcentaje de estudiantes según tipo de respuesta",45))
b
#my_layout <- rbind(c(1, 1,1,2,2), c(1, 1,1,2,2))
#my_layout
c<-grid.arrange(b,a , ncol = 2 , bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
c
#legend.text = element_text(size=8),
#Nombre en caso de que se quiera para las tablas
#c<-grid.arrange(b,a , ncol = 2, top=textGrob("Tittle", gp=gpar(fontsize=9)), bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
ggsave(filename = paste(l,"_factores_asociados_PISA_2019.pdf"), plot = c, width = 22, height = 12,
units = "cm", dpi = 320)
}
for(l in variables$dimension){
a<-ggplot(tbl[dimension==l & diferencia==1], aes(x = stringr::str_wrap(traduccion, 25), y = mnpvdiff, fill=stringr::str_wrap(group, 80)))+
geom_bar(stat = "identity", position = "dodge",width=0.7)+
coord_flip()+
geom_text(aes(label = round(mnpvdiff,2)), color = "black", position = position_dodge(0.9), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.y=element_blank(),
legend.text = element_text(size=8),
axis.ticks.y=element_blank(),
plot.title = element_text(hjust = 0.5,size=9, face="bold"))+
scale_fill_brewer(palette="Paired")+
ggtitle(stringr::str_wrap(paste("Diferencia en el logro entre los estudiantes por variables de ",l),45))
a
b<-ggplot(tblprop[dimension==l], aes(x = stringr::str_wrap(traduccion, 40), y = value, fill=stringr::str_wrap(refgroup, 40)))+
geom_bar(stat = "identity", width=0.7)+
coord_flip()+
geom_text(aes(label = scales::percent(round(value/100,2))), color = "black", position = position_stack(vjust = 0.5), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y= element_text(size=9),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5, size=9, face="bold"))+
ggtitle(stringr::str_wrap("Porcentaje de estudiantes según tipo de respuesta",45))
b
#my_layout <- rbind(c(1, 1,1,2,2), c(1, 1,1,2,2))
#my_layout
c<-grid.arrange(b,a , ncol = 2 , bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
c
#legend.text = element_text(size=8),
#Nombre en caso de que se quiera para las tablas
#c<-grid.arrange(b,a , ncol = 2, top=textGrob("Tittle", gp=gpar(fontsize=9)), bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
ggsave(filename = paste(l,"_factores_asociados_PISA_2019.pdf"), plot = c, width = 22, height = 12,
units = "cm", dpi = 320)
}
l<-"Grit"
a<-ggplot(tbl[dimension==l & diferencia==1], aes(x = stringr::str_wrap(traduccion, 25), y = mnpvdiff, fill=stringr::str_wrap(group, 80)))+
geom_bar(stat = "identity", position = "dodge",width=0.7)+
coord_flip()+
geom_text(aes(label = round(mnpvdiff,2)), color = "black", position = position_dodge(0.9), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.y=element_blank(),
legend.text = element_text(size=8),
axis.ticks.y=element_blank(),
plot.title = element_text(hjust = 0.5,size=9, face="bold"))+
scale_fill_brewer(palette="Paired")+
ggtitle(stringr::str_wrap(paste("Diferencia en el logro entre los estudiantes por variables de ",l),45))
a
b<-ggplot(tblprop[dimension==l], aes(x = stringr::str_wrap(traduccion, 40), y = value, fill=stringr::str_wrap(refgroup, 40)))+
geom_bar(stat = "identity", width=0.7)+
coord_flip()+
geom_text(aes(label = scales::percent(round(value/100,2))), color = "black", position = position_stack(vjust = 0.5), size=3.175002)+
theme(legend.position="bottom",
legend.direction = "vertical",
legend.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# Remove panel border
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "grey"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y= element_text(size=9),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5, size=9, face="bold"))+
ggtitle(stringr::str_wrap("Porcentaje de estudiantes según tipo de respuesta",45))
b
c<-grid.arrange(b,a , ncol = 2 , bottom=textGrob("Fuente: Elaboración propia con la base de datos de PISA", gp=gpar(fontsize=9)))
c
ggsave(filename = paste(l,"_factores_asociados_PISA_2019.pdf"), plot = c, width = 22, height = 12,
units = "cm", dpi = 320)
library(xlsx)
View(variables)
write.csv(variables, file = "variables.csv")
library(readxl)
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
registro_simple <- read_excel("C:/Users/carlo/Desktop/snies/registro simple.xls")
View(registro_simple)
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
registro_simple <- read_excel("C:/Users/carlo/Desktop/snies/registro simple.xls")
remove(registro_simple)
View(registro_calificado)
names(registro_de_alta_calidad)
base<-merge(registro_de_alta_calidad,registro_calificado,by= "Código SNIES del Programa" all=TRUE)
names(registro_de_alta_calidad)<-gsub("ó","o",names(registro_de_alta_calidad))
names(registro_de_alta_calidad)<-gsub(" ","_",names(registro_de_alta_calidad))
names(registro_calificado)<-gsub("ó","o",names(registro_de_alta_calidad))
names(registro_calificado)<-gsub(" ","_",names(registro_de_alta_calidad))
names(registro_de_alta_calidad)
base<-merge(registro_de_alta_calidad,registro_calificado,by= "Codigo_SNIES_del_Programa" all=TRUE)
base<-merge(registro_de_alta_calidad,registro_calificado,by= "Codigo_SNIES_del_Programa", all=TRUE)
registro_de_alta_calidad$registro<-"Alta calidad"
registro_de_alta_calidad$registro<-"calificado"
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
names(registro_de_alta_calidad)<-gsub("ó","o",names(registro_de_alta_calidad))
names(registro_de_alta_calidad)<-gsub(" ","_",names(registro_de_alta_calidad))
registro_de_alta_calidad$registro<-"Alta calidad"
names(registro_calificado)<-gsub("ó","o",names(registro_de_alta_calidad))
####importar bases de datos
library(readxl)
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
library(readxl)
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
View(registro_de_alta_calidad)
View(registro_de_alta_calidad)
View(registro_de_alta_calidad)
View(registro_calificado)
library(dplyr)
####importar bases de datos
library(readxl)
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
####importar bases de datos
library(readxl)
library(dplyr)
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls")
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
str(registro_calificado)
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls", guess_max = 6831)
names(registro_de_alta_calidad)<-gsub("ó","o",names(registro_de_alta_calidad))
names(registro_de_alta_calidad)<-gsub(" ","_",names(registro_de_alta_calidad))
registro_de_alta_calidad$registro<-"Alta calidad"
names(registro_calificado)<-gsub("ó","o",names(registro_de_alta_calidad))
names(registro_calificado)<-gsub("ó","o",names(registro_calificado))
names(registro_calificado)<-gsub(" ","_",names(registro_calificado))
registro_de_alta_calidad$registro<-"calificado"
base<-merge(registro_de_alta_calidad,registro_calificado,by= "Codigo_SNIES_del_Programa", all=TRUE)
base<-merge(registro_de_alta_calidad,registro_calificado, all=TRUE)
View(base)
####importar bases de datos
library(readxl)
library(dplyr)
registro_de_alta_calidad <- read_excel("C:/Users/carlo/Desktop/snies/registro de alta calidad.xls")
registro_calificado <- read_excel("C:/Users/carlo/Desktop/snies/registro calificado.xls", guess_max = 6831)
names(registro_de_alta_calidad)<-gsub("ó","o",names(registro_de_alta_calidad))
names(registro_de_alta_calidad)<-gsub(" ","_",names(registro_de_alta_calidad))
registro_de_alta_calidad$registro<-"Alta calidad"
names(registro_calificado)<-gsub("ó","o",names(registro_calificado))
names(registro_calificado)<-gsub(" ","_",names(registro_calificado))
registro_calificado$registro<-"calificado"
base<-merge(registro_de_alta_calidad,registro_calificado, all=TRUE)
library(xlsx)
View(base)
base<-merge(registro_de_alta_calidad,registro_calificado)
base<-merge(registro_de_alta_calidad,registro_calificado, all=TRUE)
names(registro_calificado)
base<-merge(registro_de_alta_calidad,registro_calificado, by="Codigo_SNIES_del_Programa")
base<-merge(registro_de_alta_calidad,registro_calificado, by="Codigo_SNIES_del_Programa", all=TRUE)
base<-merge(registro_de_alta_calidad,registro_calificado, all=TRUE)
base<-merge(registro_de_alta_calidad,registro_calificado, no.dups = TRUE)
base<-merge(registro_de_alta_calidad,registro_calificado,all=TRUE, no.dups = TRUE)
write.xlsx(base, "Base consolidada.xlsx")
getwd()
write.xlsx(base, "Base consolidada.xlsx", row.names = FALSE)
library(data.table)
library(dplyr)
library(readxl)
X1_ResultadosCodificacion59_3_en_proceso <- read_excel("Icfes 2019/2020/1_ResultadosCodificacion59_3_en_proceso.xlsx",
sheet = "Consolidado")
COD359_R3<- read_excel("Icfes 2019/2020/1_ResultadosCodificacion59_3_en_proceso.xlsx",
+     sheet = "Consolidado")
COD359_R3<- read_excel("Icfes 2019/2020/1_ResultadosCodificacion59_3_en_proceso.xlsx", sheet = "Consolidado")
COD359_R3<-as.data.table(COD359_R3)
View(COD359_R3)
names(COD359_R3)
COD359<-melt(COD359_R3,id.vars =c("GRSNP", "TAREA","COMPONENTE","orden","FORMA","COD_PRUEBA"), )
View(COD359)
View(COD359_R3)
COD359<-melt(COD359_R3[,-c("#")],id.vars =c("GRSNP", "TAREA","COMPONENTE","orden","FORMA","COD_PRUEBA"), )
View(COD359)
View(COD359)
setnames(COD359, c("variable","value"),c("CODIFICADOR","CALIFICACION"))
View(COD359)
View(COD359)
setnames(COD359, c("CODIFICADOR"),c("CALIFICADOR"))
View(COD359)
COD359[,c("GRSNP","CALIFICADOR","FORMA", "CALIFICACION","COMPONENTE","TAREA","COD_PRUEBA")]
View(COD359)
COD359<-COD359[,c("GRSNP","CALIFICADOR","FORMA", "CALIFICACION","COMPONENTE","TAREA","COD_PRUEBA")]
View(COD359)
COD359<-melt(COD359_R3[,-c("#")],id.vars =c("GRSNP", "TAREA","COMPONENTE","orden","FORMA","COD_PRUEBA"), )
setnames(COD359, c("CODIFICADOR"),c("CALIFICADOR"))
View(COD359)
setnames(COD359, c("variable","value"),c("CALIFICADOR","CALIFICACION"))
COD359<-COD359[,c("GRSNP","CALIFICADOR","FORMA", "CALIFICACION","COMPONENTE","TAREA","COD_PRUEBA","orden")]
View(COD359)
setorderv(COD359, c("COD_PRUEBA","GRSNP","CALIFICADOR","orden"))
View(COD359)
COD359<-COD359[,c("GRSNP","CALIFICADOR","FORMA", "CALIFICACION","COMPONENTE","TAREA","COD_PRUEBA")]
table(COD359[,CALIFICADOR])
COD359[CALIFICADOR=="cod_George",CALIFICADOR:=7196250]
COD359[CALIFICADOR=="cod_Julio",CALIFICADOR:=8085324]
COD359[CALIFICADOR=="cod_Martha",CALIFICADOR:=828209]
COD359[CALIFICADOR=="cod_Santiago",CALIFICADOR:=6257280]
COD359[CALIFICADOR=="cod_Yuly",CALIFICADOR:=4942600]
COD359[CALIFICADOR=="cod_Sebastian",CALIFICADOR:=5077126]
View(COD359)
COD359<-melt(COD359_R3[,-c("#")],id.vars =c("GRSNP", "TAREA","COMPONENTE","orden","FORMA","COD_PRUEBA"), )
setnames(COD359, c("variable","value"),c("CALIFICADOR","CALIFICACION"))
COD359<-COD359[,c("GRSNP","CALIFICADOR","FORMA", "CALIFICACION","COMPONENTE","TAREA","COD_PRUEBA","orden")]
setorderv(COD359, c("COD_PRUEBA","GRSNP","CALIFICADOR","orden"))
COD359<-COD359[,c("GRSNP","CALIFICADOR","FORMA", "CALIFICACION","COMPONENTE","TAREA","COD_PRUEBA")]
COD359[CALIFICADOR=="cod_George",CALIFICADOR:=as.character(7196250)]
COD359[CALIFICADOR=="cod_Julio",CALIFICADOR:=as.character(8085324)]
COD359[CALIFICADOR=="cod_Martha",CALIFICADOR:=as.characte(828209)]
COD359[CALIFICADOR=="cod_Santiago",CALIFICADOR:=as.character(6257280)]
COD359[CALIFICADOR=="cod_Yuly",CALIFICADOR:=as.character(4942600)]
COD359[CALIFICADOR=="cod_Sebastian",CALIFICADOR:=as.character(5077126)]
COD359[CALIFICADOR=="cod_Martha",CALIFICADOR:=as.character(828209)]
View(COD359)
table(COD359[,CALIFICADOR]
table(COD359[,CALIFICADOR])
table(COD359[,CALIFICADOR])
View(COD359)
View(COD359)
unique(COD359[,CALIFICADOR])
View(COD359)
View(COD359)
write.table(COD359, file="C:/Users/carlo/Documents/Icfes 2019/2020/rubrica3_359.txt")
write.table(COD359, file="C:/Users/carlo/Documents/Icfes 2019/2020/rubrica3_359.txt", row.names = FALSE)
library(ggplot2)
data <- data.frame(
id=seq(1,60),
individual=paste( "Mister ", seq(1,60), sep=""),
value=sample( seq(10,100), 60, replace=T)
)
p <- ggplot(data, aes(x=as.factor(id), y=value))
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
ylim(-100,120) +
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
ylim(-100,120) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
p
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
ylim(-100,120) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) + coord_polar(start = 0)
p <- ggplot(data, aes(x=as.factor(id), y=value))
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
ylim(-100,120) +
coord_polar(start = 0)
df <- data.frame(year, month, temperature)
names(data)
ggplot(df, aes(x = individual, y = value, fill = id)) +
geom_col(position = "dodge")
ggplot(data, aes(x = individual, y = value, fill = id)) +
geom_col(position = "dodge")
View(data)
data<-as.data.frame(iris)
View(data)
View(data)
View(data)
p <- ggplot(df, aes(x = Species, y = Sepal.Length, fill = Species)) +
geom_col(position = "dodge")
p <- ggplot(data, aes(x = Species, y = Sepal.Length, fill = Species)) +
geom_col(position = "dodge")
p
p
setwd("~/Repo/ds4a-team75")
setwd("~/Repo/ds4a-team75")
library("VGAM")
datos <- read.csv("~/Repo/ds4a-team75/datos.csv")
View(datos)
setwd("~/Repo/ds4a-team75")
library("VGAM")
datos <- read.csv("~/Repo/ds4a-team75/datos.csv")
View(datos)
library("data.table")
datos<-as.data.table(datos)
head(datos)
m1<-vglm(NUmberOT~ServiceType + District, family=posnegbinomial(), data=datos)
m1<-vglm(NumberOT~ServiceType + District, family=posnegbinomial(), data=datos)
summary(m1)
library("ggplot")
library("ggplot2")
output<-data.frame(resid=resid(m1)[,1], fitted=fitted(m1))
ggplot(output, aes(fitted,resid))+geom_jitter(position=position_jitter(width=0.25),
alpha=0.5) + start_smooth(method="loess")
ggplot(output, aes(fitted,resid))+geom_jitter(position=position_jitter(width=0.25),
alpha=0.5) + stat_smooth(method="loess")
hist(fitted(m1))
hist(datos$NumberOT)
hist(datos$NumberOT)
hist(datos$NumberOT)
hist(fitted(m1))
setwd("~/Repo/ds4a-team75")
library("VGAM")
library("data.table")
library("ggplot2")
datos<-as.data.table(datos)
m1<-vglm(NumberOT~ServiceType + District, family=posnegbinomial(), data=datos)
summary(m1)
output<-data.frame(resid=resid(m1)[,1], fitted=fitted(m1))
ggplot(output, aes(fitted,resid))+geom_jitter(position=position_jitter(width=0.25),
alpha=0.5) + stat_smooth(method="loess")
hist(fitted(m1))
hist(datos$NumberOT)
datos <- read.csv("~/Repo/ds4a-team75/datos.csv")
View(datos)
setwd("~/Repo/ds4a-team75")
library("VGAM")
library("data.table")
library("ggplot2")
datos <- read.csv("~/Repo/ds4a-team75/datos.csv")
datos<-as.data.table(datos)
m1<-vglm(NumberOT~ServiceType + District, family=posnegbinomial(), data=datos)
summary(m1)
output<-data.frame(resid=resid(m1)[,1], fitted=fitted(m1))
ggplot(output, aes(fitted,resid))+geom_jitter(position=position_jitter(width=0.25),
alpha=0.5) + stat_smooth(method="loess")
hist(fitted(m1))
